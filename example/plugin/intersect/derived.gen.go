// Code generated by goderive DO NOT EDIT.

package intersect

func deriveIntersect(this, that []int) []int {
	intersect := make([]int, 0, deriveMin(len(this), len(that)))
	for i, v := range this {
		if deriveContains(that, v) {
			intersect = append(intersect, this[i])
		}
	}
	return intersect
}

// deriveContains returns whether the item is contained in the list.
func deriveContains(list []int, item int) bool {
	for _, v := range list {
		if v == item {
			return true
		}
	}
	return false
}

func deriveMin(a, b int) int {
	if a < b {
		return a
	}
	return b
}
